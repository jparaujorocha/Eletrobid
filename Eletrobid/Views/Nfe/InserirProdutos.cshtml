@model Eletrobid.Models.Produto

@{
    ViewBag.Title = "Inserir Produtos";
    var msgInserirPlanilha = (string)TempData["inserirPlanilha"];
}

<h2 class="text-center">Inserir Vários Produtos</h2>


@using (Html.BeginForm("InserirProdutos", "Nfe", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <form>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CodigoItem)
        @Html.HiddenFor(model => model.Nome)
        @Html.HiddenFor(model => model.IdNfe)
        @Html.HiddenFor(model => model.Quantidade)
        @Html.HiddenFor(model => model.CodigoIdentificador)
        <fieldset>

            <div class="alert alert-info text-center">
                <strong>ATENÇÃO!</strong> Antes de enviar o(s) arquivo(s), verifique a documentação a seguir.<br />
                <a href="#" class="alert-link">Documentação</a>.<br />
                Ela deve ser seguida à risca, caso contrário os produtos não serão adicionados ao nosso banco de dados.
            </div>

            <div class="form-row mt-3">
                <div class="form-group col">
                    @Html.LabelFor(model => model.IdTipoProduto, htmlAttributes: new { @class = "control-label col" })
                    @Html.DropDownListFor(model => model.IdTipoProduto, (SelectList)ViewBag.ListTipoProduto, "Selecione o Tipo", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTipoProduto, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col">
                    @Html.LabelFor(model => model.IdEmpresaFornecedora, htmlAttributes: new { @class = "control-label col" })
                    @Html.DropDownListFor(model => model.IdEmpresaFornecedora, (SelectList)ViewBag.ListEmpresaFornecedora, "Selecione uma Empresa", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdEmpresaFornecedora, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row mt-3">
                <div class="form-group col">
                    <label><strong> Arquivo com os produtos </strong></label>
                    <input type=file multiple name="planilhas" id="planilhas" accept=".xlsx,.xls" />
                    @if (!string.IsNullOrEmpty(msgInserirPlanilha) && !string.IsNullOrWhiteSpace(msgInserirPlanilha))
                    {
                        <div class="text-danger">@msgInserirPlanilha</div>
                    }
                </div>
            </div>

            <div class="form-row text-center">
                <div class="form-group col">
                    @Html.ActionLink("Voltar", "DetalhesNfe", new { idNfe = Model.IdNfe }, new { @class = "btn btn-default" })
                    <button class="btn btn-primary" type="submit">Enviar</button>
                </div>
            </div>
        </fieldset>
    </form>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
