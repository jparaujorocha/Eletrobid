@model Eletrobid.Models.NfeViewModels

@{
    ViewBag.Title = "Inserir Nota";
}

<h2>Inserir Nota</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group col">
            @Html.LabelFor(model => model.IdTipoNotaFiscal, htmlAttributes: new { @class = "control-label col" })
            @Html.DropDownListFor(model => model.IdTipoNotaFiscal, (SelectList)ViewBag.listaTipoNfe, "Selecione o Tipo", new { @class = "form-control", @id = "IdTipoNotaFiscal" })
            @Html.ValidationMessageFor(model => model.IdTipoNotaFiscal, "", new { @class = "text-danger" })
        </div>

        <hr />

        <div class="form" id="VENDA">
            <fieldset>
                <div class="form-row mt-3">
                    <div class="form-group col">
                        @Html.LabelFor(model => model.NomeCliente, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.NomeCliente, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Cpf, new { @class = "form-control", maxlength = 14 })
                        @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row mt-3">
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Endereco, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">

                        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Bairro, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row mt-3">
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Complemento, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.IdEstado, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.DropDownListFor(model => model.IdEstado, (SelectList)ViewBag.ListaEstados, "Estado", new { @class = "form-control", @id = "Estado" })
                        @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.IdCidade, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.DropDownListFor(model => model.IdCidade, (SelectList)ViewBag.ListaCidades, "Cidade", new { @class = "form-control", @id = "Cidade" })
                        @Html.ValidationMessageFor(model => model.IdCidade, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Cep, new { @class = "form-control", maxlength = 11 })
                        @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row mt-3">
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.Descricao, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.QtdeProdutos, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.EditorFor(model => model.QtdeProdutos, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QtdeProdutos, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row mt-3">
                    <div class="form-group col">
                        @Html.LabelFor(model => model.NomeCliente, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.NomeCliente, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.NomeCliente, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.NomeCliente, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col">
                        @Html.LabelFor(model => model.NomeCliente, htmlAttributes: new { @class = "control-label col-sm-2" })
                        @Html.TextBoxFor(model => model.NomeCliente, new { @class = "form-control", maxlength = 255 })
                        @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
        </div>
           
        <div class="form" id="REMESSA">

        </div>
             
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        $(function () {

            var idTipoNota = @(Model == null ? 0 : Model.IdTipoNotaFiscal);

            if(idTipoNota === 1)
            {
                showVenda();
            }
            if(idTipoNota === 2)
            {
                showRemessa();
            }
            if(idTipoNota === 3)
            {
                showRetorno();
            }
            if(idTipoNota === 4)
            {
                showEntrada();
            }


            $("#IdTipoNota").on('change',function(e){

                var tipoNota = $(this).val();

                if(tipoNota !== ""){
                    if(idTipoNota === 1)
                    {
                        showVenda();
                    }
                    if(idTipoNota === 2)
                    {
                        showRemessa();
                    }
                    if(idTipoNota === 3)
                    {
                        showRetorno();
                    }
                    if(idTipoNota === 4)
                    {
                        showEntrada();
                    }
                }
                else{
                    $("#VENDA, #REMESSA, #RETORNO,#ENTRADA, #bt-salvar").addClass("hidden");
                }

            });

        });

    </script>
}